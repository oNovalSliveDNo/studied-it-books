# Доступ отовсюду
# Демонстрирует работу с глобальными переменными

# Эта функция просто читает значение переменной value из глобальной области видимости
def read_global():
    print("В области видимости функции read_global() значение value равно:", value)


# Эта функция создает локальную переменную с именем value,
# которая "затеняет" (перекрывает) глобальную переменную value
def shadow_global():
    value = -10  # Это локальная переменная, не влияет на глобальную value
    print("В области видимости функции shadow_global() значение value равно:", value)


# Эта функция изменяет глобальную переменную value,
# благодаря ключевому слову global
def change_global():
    global value  # Теперь все изменения переменной value будут касаться глобальной переменной
    value = -10  # Меняем глобальную переменную
    print("В области видимости функции change_global() значение value равно:", value)


# основная часть
# value - глобальная переменная, потому что сейчас мы находимся в глобальной области видимости
value = 10  # Присваиваем значение глобальной переменной
print("B глобальной области видимости значение переменной value сейчас стало равным:", value, "\n")

# Вызываем функцию, которая просто читает глобальную переменную
read_global()
print("Вернемся в глобальную область видимости. Здесь value по-прежнему равно", value, "\n")

# Вызываем функцию, в которой создается локальная переменная value (она не влияет на глобальную)
shadow_global()
print("Вернемся в глобальную область видимости. Здесь value по-прежнему равно", value, "\n")

# Вызываем функцию, которая изменяет глобальную переменную value
change_global()
print("Вернемся в глобальную область видимости. Значение value изменилось на", value)

# Ждем, пока пользователь нажмет Enter, чтобы программа не закрылась сразу
input("\n\nHaжмитe Enter, чтобы выйти.")
