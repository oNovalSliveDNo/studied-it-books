# Зверюшка с атрибутами
# Демонстрирует создание атрибутов объекта и доступ к ним

# Определение класса Critter
class Critter(object):
    """Виртуальный питомец"""

    # Метод-конструктор, который вызывается при создании нового объекта
    def __init__(self, name):
        print("Появилась на свет новая зверюшка!")
        # Атрибут объекта, который хранит имя зверюшки
        self.name = name

    # Метод __str__, который возвращает строковое представление объекта для вывода
    def __str__(self):
        rep = "Critter object\n"  # Заголовок для вывода
        # Добавление информации об имени зверюшки
        rep += "имя: " + self.name + "\n"
        return rep

    # Метод, который выводит приветствие от зверюшки
    def talk(self):
        # Печатает сообщение с именем зверюшки
        print("Привет. Меня зовут", self.name, "\n")


# основная часть программы
# Создаем два объекта (экземпляра) класса Critter с разными именами
crit1 = Critter("Бобик")  # Создание зверюшки с именем "Бобик"
crit1.talk()  # Зверюшка приветствует, вызываем метод talk

crit2 = Critter("Мурзик")  # Создание зверюшки с именем "Мурзик"
crit2.talk()  # Зверюшка приветствует, вызываем метод talk

# Выводим строковое представление объекта crit1, которое определено в методе __str__
print("Bывод объекта crit1 на экран:")
print(crit1)

# Прямой доступ к атрибуту объекта crit1 (имя зверюшки)
print("Непосредственный доступ к атрибуту crit1.name:")
print(crit1.name)  # Выводим имя зверюшки crit1

# Ожидаем нажатия клавиши Enter перед выходом из программы
input("\n\nHaжмите Enter, чтобы выйти.")
