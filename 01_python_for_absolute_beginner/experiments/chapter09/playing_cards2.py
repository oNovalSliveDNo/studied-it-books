# Карты 2.0
# Демонстрирует расширение класса через наследование

class Card(object):
    """ Одна игральная карта. """

    # Списки всех возможных значений карты (рангов) и мастей
    RANKS = ["A", "2", "3", "4", "5", "6", "7",
             "8", "9", "10", "J", "Q", "K"]
    SUITS = ["c", "d", "h", "s"]

    def __init__(self, rank, suit):
        """Конструктор, который инициализирует ранг и масть карты."""
        self.rank = rank  # Ранг карты (например, "A", "2", "3", ...)
        self.suit = suit  # Масть карты (например, "c", "d", "h", "s")

    def __str__(self):
        """Метод, который определяет, как карта будет отображаться при выводе на экран."""
        rep = self.rank + self.suit  # Возвращает строковое представление карты (например, "Aс")
        return rep


class Hand(object):
    """ 'Рука': набор карт на руках у одного игрока. """

    def __init__(self):
        """Конструктор, который инициализирует пустую руку с картами."""
        self.cards = []  # Список карт в руке

    def __str__(self):
        """Метод для отображения карт, которые есть на руках у игрока."""
        if self.cards:  # Если карты есть на руках
            rep = ""
            for card in self.cards:  # Перебираем все карты в руке
                rep += str(card) + "\t"  # Добавляем строковое представление каждой карты
        else:
            rep = "<пусто>"  # Если карт нет, выводим "пусто"
        return rep

    def clear(self):
        """Метод для очистки руки (удаление всех карт)."""
        self.cards = []  # Обнуляем список карт

    def add(self, card):
        """Метод для добавления карты в руку."""
        self.cards.append(card)  # Добавляем карту в список карт

    def give(self, card, other_hand):
        """Метод для передачи карты из одной руки в другую."""
        self.cards.remove(card)  # Убираем карту из текущей руки
        other_hand.add(card)  # Добавляем карту в другую руку


class Deck(Hand):
    """ Колода игральных карт. Наследует от класса Hand. """

    def populate(self):
        """Метод для заполнения колоды всеми возможными картами."""
        for suit in Card.SUITS:  # Перебираем все масти карт
            for rank in Card.RANKS:  # Перебираем все ранги карт
                self.add(Card(rank, suit))  # Добавляем карту в колоду

    def shuffle(self):
        """Метод для перемешивания карт в колоде."""
        import random
        random.shuffle(self.cards)  # Перемешиваем карты с использованием стандартного модуля random

    def deal(self, hands, per_hand=1):
        """Метод для раздачи карт игрокам."""
        for rounds in range(per_hand):  # Цикл для раздачи нужного количества карт
            for hand in hands:  # Перебираем всех игроков
                if self.cards:  # Если карты в колоде остались
                    top_card = self.cards[0]  # Берем верхнюю карту из колоды
                    self.give(top_card, hand)  # Передаем карту игроку
                else:
                    print("He могу больше сдавать: карты закончились!")  # Если карты закончились


# основная часть
deck1 = Deck()  # Создаем новую колоду
print("Coздaнa новая колода.")
print("Boт эта колода:")
print(deck1)  # Выводим колоду на экран (пока она пустая)

deck1.populate()  # Заполняем колоду картами
print("\nB колоде появились карты.")
print("Boт как она выглядит теперь:")
print(deck1)  # Выводим колоду после заполнения

deck1.shuffle()  # Перемешиваем колоду
print("\nКолода перемешана.")
print("Boт как она выглядит теперь:")
print(deck1)  # Выводим перемешанную колоду

my_hand = Hand()  # Создаем руку для первого игрока
your_hand = Hand()  # Создаем руку для второго игрока
hands = [my_hand, your_hand]  # Список всех рук игроков
deck1.deal(hands, per_hand=5)  # Раздаем по 5 карт каждому игроку
print("\nMнe и вам на руки роздано по 5 карт.")
print("У меня на руках:")
print(my_hand)  # Выводим карты первого игрока
print("У вас на руках:")
print(your_hand)  # Выводим карты второго игрока
print("Ocтaлocь в колоде:")
print(deck1)  # Выводим оставшиеся карты в колоде

deck1.clear()  # Очищаем колоду (удаляем все карты)
print("\nКолода очищена.")
print("Boт как она выглядит теперь:", deck1)  # Выводим очищенную колоду

input("\n\nНaжмитe Enter, чтобы выйти.")  # Ожидание завершения программы
