def find_smallest(arr):
    """
    Находит индекс наименьшего элемента в массиве.

    Параметры:
        arr (list): Массив элементов, в котором выполняется поиск.

    Возвращает:
        int: Индекс наименьшего элемента в массиве.

    Примечание:
        Если массив пуст, возникнет исключение IndexError.
    """

    smallest = arr[0]  # Инициализируем первое значение как наименьшее
    smallest_index = 0  # Индекс наименьшего значения (пока 0)

    # Проходим по всем элементам массива начиная со второго
    for i in range(1, len(arr)):

        # Если текущий элемент меньше найденного наименьшего
        if arr[i] < smallest:
            smallest = arr[i]  # Обновляем наименьшее значение
            smallest_index = i  # Обновляем индекс наименьшего значения

    return smallest_index


def selection_sort(arr):
    """
    Сортирует массив методом выбора (selection sort).

    Параметры:
        arr (list): Массив элементов для сортировки.

    Возвращает:
        list: Новый отсортированный массив.

    Алгоритм:
        1. Находим наименьший элемент в неотсортированной части массива
        2. Добавляем его в конец отсортированной части
        3. Повторяем пока весь массив не будет отсортирован
    """

    new_arr = []  # Инициализируем новый массив для отсортированных элементов
    copied_arr = list(arr)  # Создаем копию исходного массива

    # Повторяем для каждого элемента исходного массива
    for i in range(len(copied_arr)):
        # Находим индекс наименьшего элемента в оставшейся части
        smallest_index = find_smallest(copied_arr)

        # Удаляем наименьший элемент из старого массива и добавляем в новый
        new_arr.append(copied_arr.pop(smallest_index))

    return new_arr
